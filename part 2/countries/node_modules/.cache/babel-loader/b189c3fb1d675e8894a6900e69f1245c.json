{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sidhartha\\\\Downloads\\\\fullstackopen-master (1)\\\\fullstackopen-master\\\\part2\\\\countries\\\\src\\\\components\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst style = {\n  margin: \"20px\"\n};\nconst flagStyle = {\n  width: \"180px\"\n};\n\nconst ShowCountry = ({\n  country\n}) => {\n  const [weatherDetails, setWeatherDetails] = useState({});\n  const {\n    name,\n    capital,\n    population,\n    languages,\n    flag\n  } = country;\n  const api_key = process.env.REACT_APP_API_KEY;\n  useEffect(() => {\n    axios.get(`http://api.weatherstack.com/current?access_key=${api_key}&query=${capital}`).then(response => {\n      console.log(response.data);\n      const {\n        temperature,\n        weather_icons,\n        wind_speed,\n        wind_dir\n      } = response.data.current;\n      setWeatherDetails({\n        temperature,\n        weather_icons,\n        wind_speed,\n        wind_dir\n      });\n    });\n  }, [api_key, capital]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"capital \", capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"population \", population), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Spoken Languages\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, languages.map(language => /*#__PURE__*/React.createElement(\"li\", {\n    key: language.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 42\n    }\n  }, language.name))), /*#__PURE__*/React.createElement(\"img\", {\n    src: flag,\n    alt: \"flag\",\n    style: flagStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Weather at \", capital), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }\n  }, \"temperature\"), \": \", weatherDetails.temperature, \" Celcius\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: weatherDetails.weather_icons,\n    alt: \"weather icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }\n  }, \"wind:\"), \" \", weatherDetails.wind_speed, \" mph direction \", weatherDetails.wind_dir));\n};\n\nconst ListCountries = ({\n  query\n}) => {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState({});\n  useEffect(() => {\n    if (query !== \"\") {\n      axios.get(`https://restcountries.eu/rest/v2/name/${query}`).then(response => {\n        setCountries(response.data);\n      });\n    }\n  });\n\n  const handleShow = country => {\n    setCountry(country);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, countries.length > 10 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 39\n    }\n  }, \"too many matches, specify another filter\"), countries.length < 10 && countries.length !== 1 && countries.map(country => /*#__PURE__*/React.createElement(\"div\", {\n    key: country.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 92\n    }\n  }, country.name, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleShow(country),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 130\n    }\n  }, \"show\"))), country.languages !== undefined && /*#__PURE__*/React.createElement(ShowCountry, {\n    country: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 49\n    }\n  }));\n};\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    event.preventDefault();\n    setQuery(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"find countries \", /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 32\n    }\n  })), /*#__PURE__*/React.createElement(ListCountries, {\n    query: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/sidhartha/Downloads/fullstackopen-master (1)/fullstackopen-master/part2/countries/src/components/App.js"],"names":["React","useState","useEffect","axios","style","margin","flagStyle","width","ShowCountry","country","weatherDetails","setWeatherDetails","name","capital","population","languages","flag","api_key","process","env","REACT_APP_API_KEY","get","then","response","console","log","data","temperature","weather_icons","wind_speed","wind_dir","current","map","language","ListCountries","query","countries","setCountries","setCountry","handleShow","length","undefined","App","setQuery","handleChange","event","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst style = {\n    margin: \"20px\"\n}\n\nconst flagStyle = {\n    width : \"180px\"\n}\n\nconst ShowCountry = ({country}) => {\n    \n    const [weatherDetails, setWeatherDetails] = useState({})\n\n    const {name,capital,population,languages,flag} = country\n    const api_key = process.env.REACT_APP_API_KEY\n    \n    useEffect(()=>{\n        axios\n        .get(`http://api.weatherstack.com/current?access_key=${api_key}&query=${capital}`)\n        .then((response)=>{\n            console.log(response.data)\n            const {temperature,weather_icons,wind_speed,wind_dir} = response.data.current\n            setWeatherDetails({\n                temperature,\n                weather_icons,\n                wind_speed,\n                wind_dir\n            })\n        })\n\n    },[api_key,capital])\n\n    return (\n        <div>\n            <h1>{name}</h1>\n            <p>capital {capital}</p>\n            <p>population {population}</p>\n            <h2>Spoken Languages</h2>\n            <ul>\n            {languages.map((language) => <li key={language.name}>{language.name}</li>)}\n            </ul>\n            <img src={flag} alt=\"flag\" style={flagStyle}></img>\n            <h2>Weather at {capital}</h2>\n            <p><b>temperature</b>: {weatherDetails.temperature} Celcius</p>\n            <img src={weatherDetails.weather_icons} alt=\"weather icon\"></img>\n            <p><b>wind:</b> {weatherDetails.wind_speed} mph direction {weatherDetails.wind_dir}</p>\n        </div>\n    )\n}\n\nconst ListCountries = ({query}) => {\n    \n    const [countries,setCountries] = useState([])\n    const [country,setCountry] = useState({})\n\n    useEffect(()=>{\n        if(query !== \"\"){\n            axios\n            .get(`https://restcountries.eu/rest/v2/name/${query}`)\n            .then((response) => {\n                setCountries(response.data)\n            })\n        }\n    })\n\n    const handleShow = (country) => {\n        setCountry(country)\n    }\n\n    return (\n        <div>\n            {countries.length > 10 && <p>too many matches, specify another filter</p>}\n            {countries.length < 10 && countries.length !== 1 && countries.map((country) => <div key={country.name}>{country.name}<button onClick={() => handleShow(country)}>show</button></div>)}\n            {country.languages !== undefined && <ShowCountry country={country}/>}\n        </div>\n    )\n\n}\n\nconst App = () => {\n\n    const [query,setQuery] = useState('')\n\n    const handleChange = (event) => {\n        event.preventDefault()\n        setQuery(event.target.value)\n    }\n\n    return (\n        <div style={style}>\n            <div>\n                find countries <input onChange={handleChange} value={query}></input>\n            </div>     \n            <ListCountries query={query}/>\n        </div>\n    )\n}\nexport default App"]},"metadata":{},"sourceType":"module"}